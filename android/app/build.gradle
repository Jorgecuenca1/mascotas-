plugins {
    id "com.android.application"
    id "kotlin-android"
    // El plugin de Flutter debe ir después de Android y Kotlin
    id "dev.flutter.flutter-gradle-plugin"
}

// Carga de las propiedades del keystore
def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.example.mascotas"
    compileSdk = 35
    ndkVersion = "25.1.8937393"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    defaultConfig {
        applicationId = "com.example.mascotas"
        minSdk = 21
        targetSdk = 35
        versionCode = 1
        versionName = "1.0"
    }

    // Configuración de firmas
    signingConfigs {
        release {
            // Se asume que en key.properties tienes:
            // storePassword=<tu-contraseña>
            // keyPassword=<tu-contraseña>
            // keyAlias=my_key_alias
            // storeFile=app/my-release-key.jks
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // Asigna la configuración de firma de arriba
            signingConfig signingConfigs.release

            // Opciones recomendadas para release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // Firma con debug para pruebas locales
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
